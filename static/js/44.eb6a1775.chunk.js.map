{"version":3,"sources":["assets/img/brand/LoginImg0.jpg","assets/img/brand/logo.svg","views/Pages/Login/Login.js"],"names":["module","exports","BgImage","require","Login","state","username","password","loggedIn","isloading","fields","errors","loading","className","login","e","preventDefault","setState","handleValidation","swal","fire","timer","background","onBeforeOpen","showLoading","axios","post","APP_CONFIG","BASE_API_URL_AUTH","headers","ContentType","then","token","userToken","data","userErrorCode","status","userErrorMessage","statusText","currentUser","errCode","errMsg","setTimeNow","Date","now","localStorage","setItem","JSON","stringify","window","location","href","catch","error","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","progress","undefined","this","formIsValid","field","target","value","$","document","ready","delay","fadeIn","style","backgroundImage","backgroundColor","backgroundSize","height","backgroundRepeat","color","float","paddingTop","paddingRight","fontFamily","fontSize","clear","display","justifyContent","id","padding","width","textTransform","type","onChange","handleChange","bind","onInput","placeholder","autoComplete","required","xs","borderRadius","paddingLeft","paddingBottom","onClick","props","user","marginTop","Component"],"mappings":"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","file":"static/js/44.eb6a1775.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/LoginImg0.94ce547e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logo.b782f149.svg\";","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardBody,\r\n  CardGroup,\r\n  CardImg,\r\n  Col,\r\n  Container,\r\n  Form,\r\n  Input,\r\n  InputGroup,\r\n  InputGroupAddon,\r\n  InputGroupText,\r\n  Row,\r\n  Spinner,\r\n} from \"reactstrap\";\r\nimport axios from \"axios\";\r\nimport * as APP_CONFIG from \"../../../config/config\";\r\nimport { Redirect, Route, Switch } from \"react-router-dom\";\r\nimport \"./login.css\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport swal from \"sweetalert2\";\r\nimport $ from \"jquery\";\r\n\r\nconst logo = require(\"../../../assets/img/brand/logo.svg\");\r\nconst BgImage = require(\"../../../assets/img/brand/LoginImg0.jpg\");\r\n\r\nclass Login extends Component {\r\n  state = {\r\n    username: \"\",\r\n    password: \"\",\r\n    loggedIn: false,\r\n    isloading: false,\r\n    fields: {},\r\n    errors: {},\r\n  };\r\n\r\n  handleValidation() {\r\n    let fields = this.state.fields;\r\n    let errors = {};\r\n    let formIsValid = true;\r\n\r\n    //Name\r\n    if (!fields[\"username\"]) {\r\n      formIsValid = false;\r\n      errors[\"username\"] = \"Please enter your username \";\r\n    }\r\n\r\n    if (!fields[\"password\"]) {\r\n      formIsValid = false;\r\n      errors[\"password\"] = \"You haven't added a password\";\r\n    }\r\n\r\n    this.setState({ errors: errors });\r\n    return formIsValid;\r\n  }\r\n\r\n  handleChange(field, e) {\r\n    let fields = this.state.fields;\r\n    fields[field] = e.target.value;\r\n    this.setState({ fields });\r\n  }\r\n  loading = () => (\r\n    <div className=\"animated fadeIn pt-1 text-center\">Loading...</div>\r\n  );\r\n\r\n  render() {\r\n    // this.loading();\r\n    // swal.fire({\r\n    //   timer: 2000,\r\n    //   background: '#ffffff00',\r\n    //   onBeforeOpen: () => {\r\n    //     swal.showLoading()\r\n    //   }\r\n    // })\r\n\r\n    $(document).ready(function () {\r\n      $(\"#loginFormHideBeforeDisplay\").delay(0).fadeIn(2000);\r\n    });\r\n\r\n    const { isloading } = this.state;\r\n\r\n    return (\r\n      <div\r\n        style={{\r\n          backgroundImage: \"url(\" + BgImage + \")\",\r\n          backgroundColor: \"#fff\",\r\n          backgroundSize: \"100%\",\r\n          height: \"100%\",\r\n          backgroundRepeat: \"no-repeat\",\r\n          backgroundSize: \"cover\",\r\n        }}\r\n      >\r\n        <div\r\n          style={{ backgroundColor: \"#ffffff\", color: \"#000\", height: \"50px\" }}\r\n        >\r\n          {/* <img\r\n            src={logo}\r\n            width=\"100\"\r\n            style={{ paddingTop: \"10px\", paddingLeft: \"5px\" }}\r\n          /> */}\r\n          <a\r\n            style={{\r\n              float: \"right\",\r\n              paddingTop: \"10px\",\r\n              paddingRight: \"15px\",\r\n              color: \"#000\",\r\n              fontFamily: \"tahoma\",\r\n              fontSize: \"em\",\r\n            }}\r\n          >\r\n            Retail Internet Solutions\r\n          </a>\r\n        </div>\r\n        <br />\r\n        <div className=\"app align-items-center \" style={{ clear: \"both\" }}>\r\n          <Container\r\n            className=\"container\"\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              paddingTop: \"50px\",\r\n            }}\r\n          >\r\n            {/* <img src={logo} width=\"250\" style={{ float: 'center', paddingTop: '80px', paddingLeft: '0px' }} /> */}\r\n            <Row>\r\n              <Col>\r\n                <CardGroup\r\n                  id=\"loginFormHideBeforeDisplay\"\r\n                  style={{\r\n                    display: \"none\",\r\n                    padding: \"0px\",\r\n                    width: \"400px\",\r\n                    height: \"auto\",\r\n                  }}\r\n                >\r\n                  <Card className=\"p-4 lginbdr\">\r\n                    <CardBody>\r\n                      <p\r\n                        style={{\r\n                          float: \"right\",\r\n                          textTransform: \"uppercase\",\r\n                          color: \"red\",\r\n                        }}\r\n                      >\r\n                        World of convenience.\r\n                      </p>\r\n                      <br />\r\n                      <br />\r\n                      <hr />\r\n                      <Form>\r\n                        <p className=\"text-muted\">Sign in to your account</p>\r\n\r\n                        <div className=\"loginerror\">\r\n                          {this.state.errors.username}\r\n                        </div>\r\n                        <InputGroup className=\"mb-3\">\r\n                          <Input\r\n                            type=\"text\"\r\n                            onChange={this.handleChange.bind(this, \"username\")}\r\n                            onInput={(e) => {\r\n                              this.setState({ username: e.target.value });\r\n                            }}\r\n                            placeholder=\"Username\"\r\n                            autoComplete=\"username\"\r\n                            required\r\n                          />\r\n                        </InputGroup>\r\n\r\n                        <div className=\"loginerror\">\r\n                          {this.state.errors.password}\r\n                        </div>\r\n                        <InputGroup className=\"mb-4\">\r\n                          <Input\r\n                            type=\"password\"\r\n                            onChange={this.handleChange.bind(this, \"password\")}\r\n                            onInput={(e) => {\r\n                              this.setState({ password: e.target.value });\r\n                            }}\r\n                            placeholder=\"Password\"\r\n                            autoComplete=\"current-password\"\r\n                            required\r\n                          />\r\n                        </InputGroup>\r\n                        <br />\r\n                        <Row style={{ float: \"right\" }}>\r\n                          <Col xs=\"12\">\r\n                            <button\r\n                              type=\"submit\"\r\n                              style={{\r\n                                backgroundColor: \"red\",\r\n                                color: \"#fff\",\r\n                                borderRadius: 10,\r\n                                paddingLeft: 20,\r\n                                paddingRight: 20,\r\n                                paddingTop: 2,\r\n                                paddingBottom: 5,\r\n                              }}\r\n                              onClick={this.login}\r\n                            >\r\n                              <a style={{ fontSize: \"14px\" }}>Sign in</a>\r\n                            </button>\r\n                            <div className=\"loginerror\">\r\n                              {this.props?.user?.error}\r\n                            </div>\r\n                          </Col>\r\n                        </Row>\r\n                      </Form>\r\n                    </CardBody>\r\n                  </Card>\r\n                </CardGroup>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n          <p\r\n            style={{\r\n              color: \"#ffffff\",\r\n              backgroundColor: \"#4E4C45\",\r\n              marginTop: \"50px\",\r\n              paddingLeft: \"10px\",\r\n              paddingRight: \"10px\",\r\n            }}\r\n          >\r\n            Solutions that helps you.\r\n          </p>\r\n        </div>\r\n\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            backgroundColor: \"#4E4C45\",\r\n            color: \"#fff\",\r\n            height: \"50px\",\r\n            clear: \"both\",\r\n            paddingTop: \"15px\",\r\n          }}\r\n        >\r\n          Powered &copy;2020 | All Rights Reservred\r\n        </div>\r\n        {/* <span className=\"container\" style={{ display: 'flex', justifyContent: 'center' }} >Powered &copy;2020 | All Rights Reservred </span> */}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  login = (e) => {\r\n    e.preventDefault();\r\n\r\n    this.setState({ isloading: true });\r\n\r\n    if (!this.handleValidation()) {\r\n      return;\r\n    }\r\n\r\n    swal.fire({\r\n      timer: 3000,\r\n      background: \"#ffffff00\",\r\n      onBeforeOpen: () => {\r\n        swal.showLoading();\r\n      },\r\n    });\r\n    // login\r\n    axios\r\n      .post(\r\n        APP_CONFIG[APP_CONFIG.REACT_APP_ENVIRONMENT].BASE_API_URL_AUTH,\r\n        {\r\n          username: this.state.username,\r\n          password: this.state.password,\r\n        },\r\n        {\r\n          headers: {\r\n            ContentType: \"application/json\",\r\n            \"Access-Control-Allow-Origin\": \"*\",\r\n          },\r\n        }\r\n      )\r\n      .then((token) => {\r\n        // console.log(\"auth ===>\", token);\r\n        const userToken = token?.data;\r\n        const userErrorCode = token?.status;\r\n        const userErrorMessage = token?.statusText;\r\n\r\n        const currentUser = {\r\n          token: userToken,\r\n          username: this.state.username,\r\n          errCode: userErrorCode,\r\n          errMsg: userErrorMessage,\r\n          setTimeNow: Date.now() + 3600000,\r\n        };\r\n\r\n        localStorage.setItem(\"currentUser\", JSON.stringify(currentUser));\r\n        this.setState({ isloading: false });\r\n        window.location.href = \"/dashboard\";\r\n      })\r\n      .catch((error) => {\r\n        toast.error(\"Wrong User Credentials\",{\r\n          position: \"top-center\",\r\n          autoClose: 5000,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          progress: undefined,\r\n          });\r\n        this.setState({ isloading: false });\r\n      });\r\n  };\r\n}\r\n\r\nexport default Login;\r\n"],"sourceRoot":""}