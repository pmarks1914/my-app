{"version":3,"sources":["admin_navigation.js","routes_admin.js","containers/DefaultLayout/DefaultLayout.js"],"names":["items","name","url","icon","Breadcrumbs","React","lazy","Cards","Carousels","Collapses","Dropdowns","Forms","Jumbotrons","ListGroups","Navbars","Navs","Paginations","Popovers","ProgressBar","Switches","Tables","Tabs","Tooltips","BrandButtons","ButtonDropdowns","ButtonGroups","Buttons","Charts","Dashboard","CoreUIIcons","Flags","FontAwesome","SimpleLineIcons","Alerts","Badges","Modals","Colors","routes","path","exact","component","DefaultFooter","DefaultHeader","usersSessionData","localStorage","getItem","DefaultLayout","loading","Spinner","e","preventDefault","removeItem","window","location","href","currentUser","JSON","parse","errCode","admin_routes","admin_navigation","className","fixed","style","backgroundColor","fallback","this","onLogout","signOut","props","user","role","Constants","admin","appRoutes","router","Container","fluid","map","route","idx","key","render","from","to","Component","connect","state","dispatch","getUser","getUserAsync"],"mappings":"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","file":"static/js/50.e1bf4dc7.chunk.js","sourcesContent":["// import Campaign from '../src/screens/Campaign/Campaign';\r\n\r\nexport default {\r\n  items: [\r\n    {\r\n      name: 'Dashboard',\r\n      url: '/dashboard',\r\n      icon: 'icon-home',\r\n    },    \r\n    // {\r\n    //   name: 'Subscription',\r\n    //   url: '/subscription',\r\n    //   icon: 'icon-calendar',\r\n    // },\r\n    // {\r\n    //   name: 'Channel',\r\n    //   icon: 'icon-list',\r\n    //   url: '/channel'\r\n    // },\r\n    // {\r\n    //   name: 'Campaign',\r\n    //   url: '/campaign',\r\n    //   icon: 'icon-bell'\r\n    // },\r\n    // {\r\n    //   name: 'User Management',\r\n    //   url: '/userManagement',\r\n    //   icon: 'icon-user'\r\n    // }  \r\n  ],\r\n  \r\n};\r\n","import React from 'react';\r\n\r\nconst Breadcrumbs = React.lazy(() => import('./views/Base/Breadcrumbs'));\r\nconst Cards = React.lazy(() => import('./views/Base/Cards'));\r\nconst Carousels = React.lazy(() => import('./views/Base/Carousels'));\r\nconst Collapses = React.lazy(() => import('./views/Base/Collapses'));\r\nconst Dropdowns = React.lazy(() => import('./views/Base/Dropdowns'));\r\nconst Forms = React.lazy(() => import('./views/Base/Forms'));\r\nconst Jumbotrons = React.lazy(() => import('./views/Base/Jumbotrons'));\r\nconst ListGroups = React.lazy(() => import('./views/Base/ListGroups'));\r\nconst Navbars = React.lazy(() => import('./views/Base/Navbars'));\r\nconst Navs = React.lazy(() => import('./views/Base/Navs'));\r\nconst Paginations = React.lazy(() => import('./views/Base/Paginations'));\r\nconst Popovers = React.lazy(() => import('./views/Base/Popovers'));\r\nconst ProgressBar = React.lazy(() => import('./views/Base/ProgressBar'));\r\nconst Switches = React.lazy(() => import('./views/Base/Switches'));\r\nconst Tables = React.lazy(() => import('./views/Base/Tables'));\r\nconst Tabs = React.lazy(() => import('./views/Base/Tabs'));\r\nconst Tooltips = React.lazy(() => import('./views/Base/Tooltips'));\r\nconst BrandButtons = React.lazy(() => import('./views/Buttons/BrandButtons'));\r\nconst ButtonDropdowns = React.lazy(() => import('./views/Buttons/ButtonDropdowns'));\r\nconst ButtonGroups = React.lazy(() => import('./views/Buttons/ButtonGroups'));\r\nconst Buttons = React.lazy(() => import('./views/Buttons/Buttons'));\r\nconst Charts = React.lazy(() => import('./views/Charts'));\r\nconst Dashboard = React.lazy(() => import('./views/Dashboard'));\r\nconst CoreUIIcons = React.lazy(() => import('./views/Icons/CoreUIIcons'));\r\nconst Flags = React.lazy(() => import('./views/Icons/Flags'));\r\nconst FontAwesome = React.lazy(() => import('./views/Icons/FontAwesome'));\r\nconst SimpleLineIcons = React.lazy(() => import('./views/Icons/SimpleLineIcons'));\r\nconst Alerts = React.lazy(() => import('./views/Notifications/Alerts'));\r\nconst Badges = React.lazy(() => import('./views/Notifications/Badges'));\r\nconst Modals = React.lazy(() => import('./views/Notifications/Modals'));\r\nconst Colors = React.lazy(() => import('./views/Theme/Colors'));\r\nconst Typography = React.lazy(() => import('./views/Theme/Typography'));\r\nconst Widgets = React.lazy(() => import('./views/Widgets/Widgets'));\r\n\r\n\r\n\r\n// https://github.com/ReactTraining/react-router/tree/master/packages/react-router-config\r\nconst routes = [\r\n  { path: '/', exact: true, name: 'Home' },\r\n  { path: '/dashboard', name: 'Dashboard', component: Dashboard },\r\n  { path: '/theme', exact: true, name: 'Theme', component: Colors },\r\n  { path: '/theme/colors', name: 'Colors', component: Colors },\r\n  { path: '/theme/typography', name: 'Typography', component: Typography },\r\n  { path: '/base', exact: true, name: 'Base', component: Cards },\r\n  { path: '/base/cards', name: 'Cards', component: Cards },\r\n  { path: '/base/forms', name: 'Forms', component: Forms },\r\n  { path: '/base/switches', name: 'Switches', component: Switches },\r\n  { path: '/base/tables', name: 'Tables', component: Tables },\r\n  { path: '/base/tabs', name: 'Tabs', component: Tabs },\r\n  { path: '/base/breadcrumbs', name: 'Breadcrumbs', component: Breadcrumbs },\r\n  { path: '/base/carousels', name: 'Carousel', component: Carousels },\r\n  { path: '/base/collapses', name: 'Collapse', component: Collapses },\r\n  { path: '/base/dropdowns', name: 'Dropdowns', component: Dropdowns },\r\n  { path: '/base/jumbotrons', name: 'Jumbotrons', component: Jumbotrons },\r\n  { path: '/base/list-groups', name: 'List Groups', component: ListGroups },\r\n  { path: '/base/navbars', name: 'Navbars', component: Navbars },\r\n  { path: '/base/navs', name: 'Navs', component: Navs },\r\n  { path: '/base/paginations', name: 'Paginations', component: Paginations },\r\n  { path: '/base/popovers', name: 'Popovers', component: Popovers },\r\n  { path: '/base/progress-bar', name: 'Progress Bar', component: ProgressBar },\r\n  { path: '/base/tooltips', name: 'Tooltips', component: Tooltips },\r\n  { path: '/buttons', exact: true, name: 'Buttons', component: Buttons },\r\n  { path: '/buttons/buttons', name: 'Buttons', component: Buttons },\r\n  { path: '/buttons/button-dropdowns', name: 'Button Dropdowns', component: ButtonDropdowns },\r\n  { path: '/buttons/button-groups', name: 'Button Groups', component: ButtonGroups },\r\n  { path: '/buttons/brand-buttons', name: 'Brand Buttons', component: BrandButtons },\r\n  { path: '/icons', exact: true, name: 'Icons', component: CoreUIIcons },\r\n  { path: '/icons/coreui-icons', name: 'CoreUI Icons', component: CoreUIIcons },\r\n  { path: '/icons/flags', name: 'Flags', component: Flags },\r\n  { path: '/icons/font-awesome', name: 'Font Awesome', component: FontAwesome },\r\n  { path: '/icons/simple-line-icons', name: 'Simple Line Icons', component: SimpleLineIcons },\r\n  { path: '/notifications', exact: true, name: 'Notifications', component: Alerts },\r\n  { path: '/notifications/alerts', name: 'Alerts', component: Alerts },\r\n  { path: '/notifications/badges', name: 'Badges', component: Badges },\r\n  { path: '/notifications/modals', name: 'Modals', component: Modals },\r\n  { path: '/widgets', name: 'Widgets', component: Widgets },\r\n  { path: '/charts', name: 'Charts', component: Charts },\r\n];\r\n\r\nexport default routes;\r\n","import React, { Component, Suspense } from 'react';\r\nimport { Redirect, Route, Switch } from 'react-router-dom';\r\nimport * as router from 'react-router-dom';\r\nimport { Container } from 'reactstrap';\r\nimport {connect} from 'react-redux';\r\nimport Constants from \"../../Utils/Constants\";\r\nimport $ from 'jquery'\r\n\r\nimport {\r\n  AppAside,\r\n  AppFooter,\r\n  AppHeader,\r\n  AppSidebar,\r\n  AppSidebarFooter,\r\n  AppSidebarForm,\r\n  AppSidebarHeader,\r\n  AppSidebarMinimizer,\r\n  AppBreadcrumb2 as AppBreadcrumb,\r\n  AppSidebarNav2 as AppSidebarNav,\r\n} from '@coreui/react';\r\n// sidebar nav config for different usergroups\r\nimport admin_navigation from '../../admin_navigation';\r\n\r\n// routes config for different user groups\r\nimport admin_routes from '../../routes_admin';\r\nimport { getUserAsync } from '../../actions/userActions';\r\n\r\nimport swal from 'sweetalert2';\r\nimport { Spinner } from 'reactstrap';\r\n\r\nconst DefaultAside = React.lazy(() => import('./DefaultAside'));\r\nconst DefaultFooter = React.lazy(() => import('./DefaultFooter'));\r\nconst DefaultHeader = React.lazy(() => import('./DefaultHeader'));\r\n\r\nlet usersSessionData  = localStorage.getItem('sessionInfo');\r\nlet usersSessionRole  = localStorage.getItem('sessionInfo.role');\r\n// let sessionRouteGaurd = localStorage.getItem(\"sessionInfo\");\r\n\r\n\r\nclass DefaultLayout extends Component {\r\n\r\n  loading = () => <> </>;\r\n  Spinner = () => <Spinner />;\r\n  \r\n  signOut(e) {\r\n    e.preventDefault()\r\n    // this.props.history.push('/login')\r\n    localStorage.removeItem(\"currentUser\");\r\n    window.location.href=\"/login\";\r\n  }y\r\n\r\n\r\n  render() {\r\n    let navigation = {}\r\n    let routes = {} \r\n    \r\n    const currentUser = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n    // currentUser?.role === 'ADMIN' || currentUser?.role === 'SUPER_ADMIN'\r\n\r\n    if (currentUser?.errCode === 200){\r\n      routes = admin_routes;\r\n      navigation = admin_navigation;\r\n    }\r\n    else {\r\n      window.location.href=\"/auth/user/login\";\r\n    }\r\n    \r\n    // swal.fire({\r\n    //   timer: 3000,\r\n    //   background: '#ffffff00',\r\n    //   onBeforeOpen: () => {\r\n    //     swal.showLoading()\r\n    //   }\r\n    // })\r\n    \r\n\r\n    return (\r\n      <div className=\"app\">\r\n        \r\n        <AppHeader fixed style={{backgroundColor: '#fff' }} >\r\n          <Suspense  fallback={this.loading()}>\r\n            <DefaultHeader onLogout={e=>this.signOut(e)}/>\r\n          </Suspense>\r\n        </AppHeader>\r\n        <div className=\"app-body\">\r\n{/* \r\n          <AppSidebar fixed display=\"lg\" style={{backgroundColor: '#000' }} >\r\n            <AppSidebarHeader />\r\n            <AppSidebarForm />\r\n            <Suspense>\r\n            <AppSidebarNav navConfig={navigation} {...this.props} router={router}/>\r\n            </Suspense>\r\n            <AppSidebarFooter />\r\n            <AppSidebarMinimizer />\r\n          </AppSidebar> */}\r\n\r\n          <main className=\"main\">\r\n\r\n            {\r\n              this.props.user.role === Constants.admin \r\n              ?\r\n              <AppBreadcrumb appRoutes={routes} router={router}/>\r\n              :\r\n              null\r\n          }\r\n            <Container fluid>\r\n              <Suspense fallback={this.loading()}>\r\n                <Switch>\r\n                  {routes.map((route, idx) => {\r\n                    return route.component ? (\r\n                      <Route\r\n                        key={idx}\r\n                        path={route.path}\r\n                        exact={route.exact}\r\n                        name={route.name}\r\n                        render={props => (\r\n                          <route.component {...props} />\r\n                        )} />\r\n                    ) : (null);\r\n                  })}\r\n                  <Redirect from=\"/\" to=\"/dashboard\" />\r\n                </Switch>\r\n              </Suspense>\r\n\r\n            </Container>\r\n          </main>\r\n\r\n          {/* <AppAside fixed>\r\n            <Suspense fallback={this.loading()}>\r\n              <DefaultAside />\r\n            </Suspense>\r\n          </AppAside> */}\r\n        </div>\r\n        <AppFooter>\r\n          <Suspense fallback={this.loading()}>\r\n            <DefaultFooter />\r\n          </Suspense>\r\n        </AppFooter>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  \r\n  let usersData = usersSessionData;\r\n  // return {\r\n  //   user : state.login,\r\n  // }\r\n  return {\r\n    user : usersData || {},\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getUser : (name) => dispatch(getUserAsync(name)),\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DefaultLayout);"],"sourceRoot":""}