{"version":3,"sources":["api.js","actions/userActions.js","Utils/Constants.js","polyfill.js","App.js","serviceWorker.js","reducers/UserReducer.js","actions/loginActions.js","reducers/LoginReducer.js","store/Store.js","index.js","config/config.js"],"names":["axiosInstance","axios","create","baseURL","adminInstance","APP_CONFIG","BASE_API_URL_ADMIN_USER","regularInstance","makeRequest","type","params","headers","base","Constants","customer","options","method","ContentType","includes","toLowerCase","data","localStorage","setItem","Date","getTime","post","username","password","then","token","access_token","savedTime","getItem","hours","clear","admin","regular","catch","error","console","actions","GET_USER","getUser","user","payload","getUserAsync","name","dispatch","exception","super_admin","window","CustomEvent","event","bubbles","cancelable","detail","undefined","evt","document","createEvent","initCustomEvent","prototype","Event","DefaultLayout","React","lazy","Home","Login","Register","Page404","Page500","App","Suspense","fallback","className","style","fontFamily","fontSize","textColor","exact","path","render","props","Component","Boolean","location","hostname","match","initialState","email","reducer","state","action","toast","configure","reducers","combineReducers","userReducer","login","loginReducer","middleware","applyMiddleware","thunk","store","serializedState","JSON","parse","e","loadFromLocalStorage","createStore","subscribe","stringify","saveToLocalStorage","getState","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister","REACT_APP_ENVIRONMENT","PROD_OBJ","BASE_URL","PROD"],"mappings":"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","file":"static/js/main.8c3b95d4.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport * as APP_CONFIG from './config/config';\r\nimport Constants from \"./Utils/Constants\";\r\n\r\nconst baseUrl = \"\";\r\n\r\nconst axiosInstance = axios.create({\r\n    baseURL: baseUrl,\r\n});\r\n\r\nconst adminInstance = axios.create({\r\n    baseURL: APP_CONFIG[APP_CONFIG.REACT_APP_ENVIRONMENT].BASE_API_URL_ADMIN_USER\r\n});\r\n\r\nconst regularInstance = axios.create({\r\n    baseURL: \"\"\r\n});\r\n\r\n\r\nexport const makeRequest = (type, params, headers = {}, base = Constants.customer) => {//try again\r\n    \r\n    const options = {\r\n        method: type,\r\n        params: params,\r\n        headers: {\r\n            ContentType: \"application/json\",\r\n            // Authorization: \"Bearer \" + token.data.access_token,\r\n            'Access-Control-Allow-Origin': '*',\r\n            \r\n\r\n...headers\r\n        }\r\n\r\n    };\r\n    \r\n    if(['put', 'post', 'patch'].includes(type.toLowerCase())) {\r\n        delete(options.params);\r\n        options.data = params;\r\n    }\r\n    \r\n    localStorage.setItem('savedTime', new Date().getTime());\r\n    \r\n    return axios.post(APP_CONFIG[APP_CONFIG.REACT_APP_ENVIRONMENT].BASE_API_URL_ADMIN_USER , {\"username\": options.data.username ,\"password\": options.data.password}).then(token=>{\r\n      \r\n        localStorage.setItem(\"sessionInfo.token\", token.data.access_token);\r\n        localStorage.setItem('savedTime', new Date().getTime());\r\n       let hours = 2;\r\n        let savedTime = localStorage.getItem('savedTime');\r\n        if (savedTime && (new Date().getTime() - savedTime > hours * 60 * 60 * 1000)) {\r\n            localStorage.clear();\r\n        }\r\n\r\n        options.headers['Authorization'] = \"Bearer \" +token.data.access_token;\r\n        switch(base){\r\n            case Constants.admin :\r\n                return adminInstance(options)\r\n            case Constants.regular :\r\n                return regularInstance(options)\r\n            default :\r\n            return axiosInstance(options)\r\n        }\r\n        // return axiosInstance(options);\r\n    }).catch(error=>{console.error(error)});\r\n\r\n}\r\n","import { makeRequest } from \"../api\"\r\n\r\nexport const actions = {\r\n    GET_USER : 'GET USER',\r\n}\r\n\r\nexport const getUser = (user) => {\r\n    return {\r\n        type: actions.GET_USER,\r\n        payload: user,\r\n    }\r\n}\r\n\r\n\r\nexport const getUserAsync = (name) => {\r\n    return dispatch => {\r\n        return makeRequest(`some-endpoint/${name}`, 'post')\r\n        .then(user=> {\r\n            dispatch(getUser(user));\r\n        })\r\n        .catch(exception => {\r\n            //dispatch an error instead\r\n            dispatch(getUser({name: 'Ama', type: 'admin'}))\r\n         })\r\n        .then(() => {\r\n            //optional action\r\n        })\r\n    }\r\n}","const Constants = {\r\n    admin: \"ROLE_USER_ADMIN\",\r\n    super_admin: \"ROLE_USER_SUPER_ADMIN\",\r\n    regular: \"ROLE_REGULAR_USER\",\r\n}\r\n\r\nexport default Constants;","/*\r\n* required polyfills\r\n*/\r\nimport \"core-js\";\r\nimport 'core-js/features/set/map';\r\n\r\n/** IE9, IE10 and IE11 requires all of the following polyfills. **/\r\n// import 'core-js/es6/symbol'\r\n// import 'core-js/es6/object'\r\n// import 'core-js/es6/function'\r\n// import 'core-js/es6/parse-int'\r\n// import 'core-js/es6/parse-float'\r\n// import 'core-js/es6/number'\r\n// import 'core-js/es6/math'\r\n// import 'core-js/es6/string'\r\n// import 'core-js/es6/date'\r\n// import 'core-js/es6/array'\r\n// import 'core-js/es6/regexp'\r\n// import 'core-js/es6/map'\r\n// import 'core-js/es6/weak-map'\r\n// import 'core-js/es6/set'\r\n// import 'core-js/es7/object'\r\n\r\n/** IE10 and IE11 requires the following for the Reflect API. */\r\n// import 'core-js/es6/reflect'\r\n\r\n/** Evergreen browsers require these. **/\r\n// Used for reflect-metadata in JIT. If you use AOT (and only Angular decorators), you can remove.\r\n// import 'core-js/es7/reflect'\r\n\r\n// CustomEvent() constructor functionality in IE9, IE10, IE11\r\n(function () {\r\n\r\n  if ( typeof window.CustomEvent === \"function\" ) return false\r\n\r\n  function CustomEvent ( event, params ) {\r\n    params = params || { bubbles: false, cancelable: false, detail: undefined }\r\n    var evt = document.createEvent( 'CustomEvent' )\r\n    evt.initCustomEvent( event, params.bubbles, params.cancelable, params.detail )\r\n    return evt\r\n  }\r\n\r\n  CustomEvent.prototype = window.Event.prototype\r\n\r\n  window.CustomEvent = CustomEvent\r\n})()\r\n","import React, { Component } from 'react';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\n// import { renderRoutes } from 'react-router-config';\r\nimport './App.scss';\r\n// import Home from './screens/Home/Home';\r\n\r\nconst loading = () => <div className=\"animated fadeIn pt-3 text-center\" style={{ fontFamily: 'initial', fontSize: '25px', textColor: '#e60000'}}></div>;\r\n\r\n// Containers\r\nconst DefaultLayout = React.lazy(() => import('./containers/DefaultLayout'));\r\n\r\n\r\n// Pages\r\nconst Home = React.lazy(() => import('./screens/Home/Home'));\r\nconst Login = React.lazy(() => import('./views/Pages/Login'));\r\nconst Register = React.lazy(() => import('./views/Pages/Register'));\r\nconst Page404 = React.lazy(() => import('./views/Pages/Page404'));\r\nconst Page500 = React.lazy(() => import('./views/Pages/Page500'));\r\n\r\nclass App extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <BrowserRouter>\r\n          <React.Suspense fallback={loading()}>\r\n            <Switch>        \r\n              <Route exact path=\"/Home\" name=\"Welcome\" render={props => <Home {...props}/>} />\r\n              <Route exact path=\"/auth/user/login\" name=\"Login Page\" render={props => <Login {...props}/>} />\r\n              <Route exact path=\"/register\" name=\"Register Page\" render={props => <Register {...props}/>} />\r\n              <Route exact path=\"/404\" name=\"Page 404\" render={props => <Page404 {...props}/>} />\r\n              <Route exact path=\"/500\" name=\"Page 500\" render={props => <Page500 {...props}/>} />\r\n              <Route path=\"/\" name=\"Home\" render={props => <DefaultLayout {...props}/>} />\r\n            </Switch>\r\n          </React.Suspense>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          // console.log(\r\n          //   'This web app is being served cache-first by a service ' +\r\n          //     'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          // );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n            \r\n              // Execute callback\r\n              if (config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n\r\n              // Execute callback\r\n              if (config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { actions } from '../actions/userActions';\r\n\r\nconst initialState = {\r\n    name: 'kofi',\r\n    type: 'customer',\r\n    email: 'a@b.com',\r\n}\r\n\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case actions.GET_USER:\r\n            return {...state, ...action.payload}\r\n        default:\r\n            return {...state}\r\n    }\r\n}\r\n\r\nexport default reducer;","import { makeRequest } from \"../api\";\r\nimport Constants from \"../Utils/Constants\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\n\r\ntoast.configure();\r\n\r\nexport const actions = {\r\n  Login: \"Login\",\r\n};\r\n\r\nexport const login = (user) => {\r\n  return {\r\n    type: actions.Login,\r\n    payload: user,\r\n  };\r\n};\r\n\r\nexport const loginAsync = (username, password) => {\r\n  return (dispatch) => {\r\n    {\r\n      /*login endpoint below*/\r\n    }\r\n    return makeRequest(\"post\", { username, password })\r\n      .then((user) => {\r\n        const status = user?.data?.status;\r\n        if (status == 204) {\r\n          toast(\"Wrong Credentals\");\r\n          dispatch(login({ error: user.data.message }));\r\n        } else {\r\n          dispatch(login(user.data.data));\r\n \r\n          // Save data to sessionStorage\r\n          localStorage.setItem(\r\n            \"sessionInfoUser.id\",\r\n            user?.data?.data?.vendorInfo?.id\r\n          );\r\n          localStorage.setItem(\"sessionInfo.role\", user?.data?.data?.role);\r\n          localStorage.setItem(\r\n            \"customerUser.name\",\r\n            user?.data?.data?.customer?.displayName\r\n          );\r\n          localStorage.setItem(\r\n            \"customerUser.id\",\r\n            user?.data?.data?.customer?.accountName\r\n          );\r\n          localStorage.setItem(\"sessionInfo\", JSON.stringify(user?.data?.data));\r\n\r\n          toast(\"Successfully logged in\");\r\n        }\r\n      })\r\n      .catch((exception) => {\r\n        //dispatch an error instead\r\n        if (this?.user?.data?.data?.role === \"ROLE_USER_ADMIN\") {\r\n          dispatch(login({ name: \"ROLE_USER_ADMIN\", type: Constants.admin }));\r\n        } else {\r\n          dispatch(\r\n            login({ name: \"ROLE_REGULAR_USER\", type: Constants.regular })\r\n          );\r\n        }\r\n      })\r\n      .then(() => {\r\n        //optional action\r\n      });\r\n  };\r\n};\r\n","import { actions } from '../actions/loginActions';\r\nimport Constants from \"../Utils/Constants\"\r\n\r\nconst initialState = {\r\n}\r\n\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case actions.Login:\r\n            return {...state, ...action.payload}\r\n        default:\r\n            return {...state}\r\n    }\r\n}\r\n\r\nexport default reducer;","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { persistStore, persistReducer } from 'redux-persist';\r\n\r\nimport userReducer from '../reducers/UserReducer';\r\nimport loginReducer from '../reducers/LoginReducer';\r\n\r\nfunction saveToLocalStorage(state){\r\n    try {\r\n        const serializedState = JSON.stringify(state)\r\n        localStorage.setItem(\"stateOfArtReduxPersist\", serializedState) \r\n     } catch(e) {\r\n    }\r\n}\r\n\r\nfunction loadFromLocalStorage(){\r\n    try{\r\n        const serializedState = localStorage.getItem(\"state\")\r\n        if (serializedState === null) return undefined\r\n        return JSON.parse(serializedState)\r\n    } \r\n    catch(e){\r\n        return undefined\r\n    }\r\n}\r\n\r\nconst reducers = combineReducers({\r\n    user: userReducer,\r\n    login: loginReducer\r\n});\r\n\r\n\r\n\r\nconst middleware = applyMiddleware(thunk);\r\n\r\nconst persistedState = loadFromLocalStorage()\r\n\r\nconst store = createStore(reducers, middleware);\r\n\r\nstore.subscribe(()=> saveToLocalStorage(store.getState()))\r\n\r\nexport default (store);","import 'react-app-polyfill/ie9'; // For IE 9-11 support\r\nimport 'react-app-polyfill/stable';\r\n// import 'react-app-polyfill/ie11'; // For IE 11 support\r\nimport './polyfill'\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\r\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\r\nimport \"mdbreact/dist/css/mdb.css\";\r\nimport { Provider } from 'react-redux';\r\nimport store from './store/Store';\r\n\r\n\r\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n\r\n","export const REACT_APP_ENVIRONMENT = \"PROD\";\r\nlet PROD_OBJ = {};\r\n\r\nPROD_OBJ[\"BASE_URL\"] = \"https://pythonrestapibooks.herokuapp.com\";\r\nPROD_OBJ[\"BASE_API_URL_AUTH\"] = PROD_OBJ.BASE_URL + \"/login\";\r\nPROD_OBJ[\"BASE_URL_GET_USERS\"] = PROD_OBJ.BASE_URL + \"/auth/users\";\r\nPROD_OBJ[\"BASE_URL_ADD_USER\"] = PROD_OBJ.BASE_URL + \"/auth/user\";\r\nPROD_OBJ[\"BASE_URL_UPDATE_USER\"] = PROD_OBJ.BASE_URL + \"/user\";\r\nPROD_OBJ[\"BASE_URL_ACC\"] = PROD_OBJ.BASE_URL + \"/auth/account\";\r\nPROD_OBJ[\"BASE_URL_ACCS\"] = PROD_OBJ.BASE_URL + \"/auth/accounts\";\r\n\r\n\r\nexport const PROD = PROD_OBJ;"],"sourceRoot":""}